#include <iostream>
#include <math.h>
#include <iomanip>
using namespace std;


void PRINT(char number, double arr[6][6]) // Функция вывода
{
    cout << "This is Matrix " << number << endl;
    for (int i{}; i<6; i++){
        for(int j{}; j<6; j++) {
            cout << fixed << setw(7) << setprecision(2) << arr[i][j] << " ";

        }
        cout<<endl;
    }
    cout<<" "<<endl;
}

void COPY(double X[6][6], double Y[6][6]){
    for(int i{}; i<6; i++){
        for(int j{}; j<6; j++ ){
            Y[i][j]=X[i][j];
        }
    }

}

int main() {

//Matrix A

    double a[6][6]{};
    double B[6][6]{};

    for(int i=0; i<6; i++){
        for(int j=0; j<6; j++){
            a[i][j] = sqrt(i+1)+(j+1)/sin(i+1);
        }
    }
    PRINT('A', a );

//Matrix B
    COPY(a, B);

    double max=-300000;
    double min=300000;
    int index_min_i{},index_max_i{};

    for(int i=0; i<6; i++){
        for(int j=0; j<6; j++){
            if (B[i][j]>max) {
                max=B[i][j];
                index_max_i=i;
            }
            else if(B[i][j]<min){
                min=B[i][j];
                index_min_i=i;
            }
        }
    }

    for (int j = 0; j < 6; j++) {

        double current = B[index_max_i][j];
        B[index_max_i][j]= B[index_min_i][j];
        B[index_min_i][j]=current;

    }

    PRINT('B', B);
//Matrix C
    int C[6][6]={};

    for(int i=0; i<6; i++){
        int N=1;

        for(int j=0; j<6; j++){
            if (j<(5-i)) {
                C[i][j]=0;
            }
            else{
                C[i][j]=N;
                N++;
            }

        }

    }
    cout << ' ' << endl;

    cout << "This is Matrix C" << endl;
    for(int i=0; i<6; i++){
        for(int j=0; j<6; j++){
            cout << C[i][j]<< " ";
        }
        cout<< " "<<endl;
    }
    cout << ' ' << endl;


//MATRIX D = B*C
    double D[6][6]{};


    for(int i=0; i<6; i++){
        for(int j=0; j<6; j++){
            for(int k=0; k<6; k++){
                D[i][j]+=B[i][k]*C[k][j] ;
            }

        }
    }
   PRINT('D', D);

//MATRIX E перестановленная

    double E[6][6]{};
    COPY(D, E);

    double cur = E[4][5];
    E[4][5]= E[5][4];
    E[5][4]=cur;
    PRINT('E', E);



//номер столбца в котором минимальный элемент

    min=30000;
    int needed{};
    for(int i=0; i<6; i++){
        for(int j=0; j<6; j++){
            if(E[i][j]<min){
                min=E[i][j];
                needed=j;
            }
        }
    }
    cout << "номер столбца в котором минимальный элемент - " << needed+1;

    return 0;
}
